<?xml version="1.0" encoding="UTF-8" ?>
<project>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="build.classes" location="build/classes"/>
    <property name="dist" location="dist"/>
    <property name="test.src" location="test"/>
    <property name="test.build" location="build/test"/>
    <property name="test.build.classes" location="build/test/classes"/>
    <property name="test.reports" location="build/test/reports"/>

    <path id="lib.path">
        <fileset dir="lib" includes="**/*.jar"/>
    </path>
    
    <path id="test.lib.path">
        <fileset dir="lib"     includes="**/*.jar"/>
        <fileset dir="testlib" includes="**/*.jar"/>
        <fileset dir="${dist}" includes="**/*.jar"/>
    </path>
  
    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build.classes}"/>
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>
    </target>

    <target name="compile" depends="init" description="compile the source">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build.classes}"
			   encoding="utf-8" debug="on" source="1.6" target="1.6">
            <classpath refid="lib.path"/>
        </javac>
    </target>

    <target name="dist" depends="compile" description="generate the distribution">
        <!-- Put everything in ${build.classes} into the MyProject-${version}.jar file -->
        <jar jarfile="${dist}/${ant.project.name}-${version}-${DSTAMP}.jar" basedir="${build.classes}"/>
    </target>
  
    <target name="unit-test-init">
        <mkdir dir="${test.build.classes}"/>
        <mkdir dir="${test.reports}"/>
        <copyfile src="${src}/log4j.xml" dest="${test.build.classes}/log4j.xml"/>
    </target>
  
    <target name="compile-tests" depends="dist, unit-test-init" description="compile unit tests" >
        <javac srcdir="${test.src}" destdir="${test.build.classes}"
			   encoding ="utf-8" debug="on" source="1.6" target="1.6">
            <classpath refid="test.lib.path"/>
        </javac>
    </target>
    
    <target name="run-tests" depends="compile-tests">
        <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
            <classpath refid="test.lib.path"/>
            <classpath>
                <pathelement location="${test.build.classes}"/>
				<pathelement location="${test.src}"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${test.reports}">
                <fileset dir="${test.src}">
                    <include name="**/*Test.java"/>
                    <!--<exclude name="**/AllTests.java"/>-->
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="release" depends="run-tests">
        <copy file="${dist}/${ant.project.name}-${version}-${DSTAMP}.jar" todir="../../releases"/>
    </target>
    
    <target name="clean" description="clean up" >
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>